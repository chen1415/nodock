version: '3.3'

services:
    p1-nestjs:
        build:
            context: ./node
            args:
                - NODE_ENV=${P1_NESTJS_NODE_ENV}
                - PROJECT_PATH=${P1_NESTJS_PROJECT_PATH}
                - YARN=${WORKSPACE_INSTALL_YARN}
                - NODE_VERSION=${NEST_NODE_VERSION}
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        entrypoint: 
            - node 
            - ${P1_NESTJS_PROJECT_RUNNING_FILEPATH}
        tty: true
    p2-mycv:
        build:
            context: ./node
            args:
                - NODE_ENV=${P2_MYCV_NODE_ENV}
                - PROJECT_PATH=${P2_MYCV_PROJECT_PATH}
                - YARN=${WORKSPACE_INSTALL_YARN}
                - NODE_VERSION=${NEST_NODE_VERSION}
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        entrypoint: 
            - node 
            - ${P2_MYCV_PROJECT_RUNNING_FILEPATH}
        tty: true
    nginx:
        build:
            context: ./nginx
            args:
                - WEB_SSL=false
                - SELF_SIGNED=false
                - NO_DEFAULT=false
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
            - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
            - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
        ports:
            - "${NGINX_HOST_HTTP_PORT}:80"
            - "${NGINX_HOST_HTTPS_PORT}:443"
        tty: true
        links:
            - p1-nestjs
            - p2-mycv
    mysql:
        build:
            context: ./mysql
            args:
                - MYSQL_DATABASE=${MYSQL_DATABASE}
                - MYSQL_USER=${MYSQL_USER}
                - MYSQL_PASSWORD=${MYSQL_PASSWORD}
                - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
                - TZ=${WORKSPACE_TIMEZONE}
        volumes:
            - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
            - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        ports:
            - "${MYSQL_PORT}:3306"
    mongo:
        build: ./mongo
        ports:
            - "${MONGODB_PORT}:27017"
        volumes:
            - ${DATA_PATH_HOST}/mongo:/data/db
            - ${DATA_PATH_HOST}/mongo_config:/data/configdb
            - ${DATA_PATH_HOST}/:/var/lib/mongodb
    certbot:
        build:
            context: ./certbot
        links:
            - nginx
        volumes:
          - ./certbot/letsencrypt/:/var/www/letsencrypt
          - ./certbot/certs/:/var/certs
    rabbitmq:
        build:
            context: ./rabbitmq
            args:
                - MANAGEMENT=false
                - FEDERATION=false
                - RABBITMQ_DEFAULT_USER=guest
                - RABBITMQ_DEFAULT_PASS=guest
        expose:
            - "5672"
    workspace:
        build:
            context: ./workspace
            args:
                - NODE_VERSION=${NODE_VERSION}
                - TZ=${WORKSPACE_TIMEZONE}
                - YARN=${WORKSPACE_INSTALL_YARN}
                - NEST=${WORKSPACE_INSTALL_NEST}
                - NEST_VERSION=${WORKSPACE_NEST_VERSION}
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        ports:
            - "${NEST_LISTEN_PORT}:${NEST_LISTEN_PORT}"
    redis:
        build:
            context: ./redis
        ports:
            - "${REDIS_PORT}:6379"
        volumes:
            - ${DATA_PATH_HOST}/redis:/data