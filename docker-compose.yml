version: '3.3'

services:
    nestjs:
        build:
            context: ./node
            args:
                - NODE_VERSION=${NODE_VERSION}
                - NODE_ENV=production
                - PROJECT_PATH=nestjs
                - YARN=${WORKSPACE_INSTALL_YARN}
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
        entrypoint: run-nodock "node index.js"
        tty: true
    mysql:
        build:
            context: ./mysql
            args:
                - MYSQL_DATABASE=${MYSQL_DATABASE}
                - MYSQL_USER=${MYSQL_USER}
                - MYSQL_PASSWORD=${MYSQL_PASSWORD}
                - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
                - TZ=${WORKSPACE_TIMEZONE}
        volumes:
            - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
            - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
        ports:
            - "${MYSQL_PORT}:3306"
    postgresql:
        build:
            context: ./postgresql
            args:
                - POSTGRES_USER=default_user
                - POSTGRES_PASSWORD=secret
                - POSTGRES_DB=default_db
        volumes:
            - ./data/postgresql/:/var/lib/postgresql
        expose:
            - "5432"
    mongo:
        build: ./mongo
        ports:
            - "${MONGODB_PORT}:27017"
        volumes:
            - ${DATA_PATH_HOST}/mongo:/data/db
            - ${DATA_PATH_HOST}/mongo_config:/data/configdb
            - ${DATA_PATH_HOST}/:/var/lib/mongodb
    nginx:
        build:
            context: ./nginx
            args:
                - WEB_REVERSE_PROXY_PORT=8000
                - WEB_SSL=false
                - SELF_SIGNED=false
                - NO_DEFAULT=false
        volumes:
            - ${APP_CODE_PATH_HOST}nginx:/var/log/nginx
            - ./certbot/certs/:/var/certs
        ports:
            - "${NGINX_HOST_HTTP_PORT}:80"
            - "${NGINX_HOST_HTTPS_PORT}:443"
        tty: true
        links:
            - nestjs
    apache:
        build:
            context: ./apache
            args:
                - WEB_REVERSE_PROXY_PORT=8000
                - WEB_SSL=false
                - SELF_SIGNED=false
                - NO_DEFAULT=false
        volumes:
            - ./data/logs/apache/:/usr/local/apache2/logs
            - ./certbot/certs/:/var/certs
        ports:
            - "80:80"
            - "443:443"
        tty: true
    certbot:
        build:
            context: ./certbot
        links:
            - apache
            - nginx
        volumes:
          - ./certbot/letsencrypt/:/var/www/letsencrypt
          - ./certbot/certs/:/var/certs
    rabbitmq:
        build:
            context: ./rabbitmq
            args:
                - MANAGEMENT=false
                - FEDERATION=false
                - RABBITMQ_DEFAULT_USER=guest
                - RABBITMQ_DEFAULT_PASS=guest
        expose:
            - "5672"
    workspace:
        build:
            context: ./workspace
            args:
                - NODE_VERSION=${NODE_VERSION}
                - TZ=${WORKSPACE_TIMEZONE}
        links:
            - nginx
        volumes:
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    memcached:
        build:
            context: ./memcached
        expose:
            - "11211"
    redis:
        build:
            context: ./redis
        ports:
            - "${REDIS_PORT}:6379"
        volumes:
            - ${DATA_PATH_HOST}/redis:/data
    rethinkdb:
        build:
            context: ./rethinkdb
        volumes:
            - ./data/rethinkdb:/data
        expose:
            - "28015"
            - "29015"
        ports:
            - "28080:8080"
